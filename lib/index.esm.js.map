{"version":3,"file":"index.esm.js","sources":["../node_modules/tweetnacl/nacl-fast.js","../src/utils/to-buffer.ts","../node_modules/minimalistic-assert/index.js","../node_modules/inherits/inherits_browser.js","../node_modules/inherits/inherits.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash.js","../node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@ethersproject/bytes/lib.esm/_version.js","../node_modules/@ethersproject/bytes/lib.esm/index.js","../node_modules/@ethersproject/sha2/lib.esm/_version.js","../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/utils/ed25519.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/sysvar.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../node_modules/fast-stable-stringify/index.js","../src/agent-manager.ts","../src/epoch-schedule.ts","../src/errors.ts","../src/fetch-impl.ts","../src/timing.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (args && 'accountKeysFromLookups' in args) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","import http from 'http';\nimport https from 'https';\n\nexport const DESTROY_TIMEOUT_MS = 5000;\n\nexport class AgentManager {\n  _agent: http.Agent | https.Agent;\n  _activeRequests = 0;\n  _destroyTimeout: ReturnType<typeof setTimeout> | null = null;\n  _useHttps: boolean;\n\n  static _newAgent(useHttps: boolean): http.Agent | https.Agent {\n    const options = {keepAlive: true, maxSockets: 25};\n    if (useHttps) {\n      return new https.Agent(options);\n    } else {\n      return new http.Agent(options);\n    }\n  }\n\n  constructor(useHttps?: boolean) {\n    this._useHttps = useHttps === true;\n    this._agent = AgentManager._newAgent(this._useHttps);\n  }\n\n  requestStart(): http.Agent | https.Agent {\n    this._activeRequests++;\n    if (this._destroyTimeout !== null) {\n      clearTimeout(this._destroyTimeout);\n      this._destroyTimeout = null;\n    }\n    return this._agent;\n  }\n\n  requestEnd() {\n    this._activeRequests--;\n    if (this._activeRequests === 0 && this._destroyTimeout === null) {\n      this._destroyTimeout = setTimeout(() => {\n        this._agent.destroy();\n        this._agent = AgentManager._newAgent(this._useHttps);\n      }, DESTROY_TIMEOUT_MS);\n    }\n  }\n}\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","import * as nodeFetch from 'node-fetch';\n\nexport * from 'node-fetch';\nexport default async function (\n  input: nodeFetch.RequestInfo,\n  init?: nodeFetch.RequestInit,\n): Promise<nodeFetch.Response> {\n  const processedInput =\n    typeof input === 'string' && input.slice(0, 2) === '//'\n      ? 'https:' + input\n      : input;\n  return await nodeFetch.default(processedInput, init);\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import nacl from 'tweetnacl';\n\nimport {Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {BlockheightBasedTransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: BlockheightBasedTransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | BlockheightBasedTransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy:\n    | BlockheightBasedTransactionConfirmationStrategy\n    | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"names":["require","toBuffer","arr","Buffer","isBuffer","Uint8Array","from","buffer","byteOffset","byteLength","assert","inherits_browserModule","require$$1","require$$0","utils","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","BlockHash","common","ft_1","ch32","maj32","s0_256","s1_256","g0_256","g1_256","shaCommon","require$$2","require$$3","SHA256","SHA512","require$$4","version","Struct","constructor","properties","Object","assign","encode","serialize","SOLANA_SCHEMA","decode","data","deserialize","decodeUnchecked","deserializeUnchecked","Enum","enum","keys","length","Error","map","key","Map","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","value","_bn","undefined","PublicKey","decoded","bs58","BN","equals","publicKey","eq","toBase58","toBytes","toJSON","b","toArrayLike","zeroPad","alloc","copy","toString","createWithSeed","fromPublicKey","seed","programId","concat","hash","sha256","slice","createProgramAddressSync","seeds","forEach","TypeError","publicKeyBytes","toArray","is_on_curve","createProgramAddress","findProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddress","isOnCurve","pubkeyData","pubkey","default","set","kind","fields","naclLowLevel","nacl","lowlevel","p","r","gf","t","chk","num","den","den2","den4","den6","set25519","gf1","unpack25519","S","M","D","Z","A","pow2523","neq25519","I","a","c","d","pack25519","crypto_verify_32","Account","secretKey","_keypair","sign","keyPair","fromSecretKey","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","defineProperty","prototype","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","push","writable","readonly","get","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","property","BufferLayout","blob","rustString","rsl","struct","u32","offset","_decode","bind","_encode","rslShim","str","chars","span","authorized","lockup","ns64","voteInit","u8","voteAuthorizeWithSeedArgs","getAlloc","type","getItemAlloc","item","field","Array","isArray","elementLayout","layout","decodeLength","bytes","len","size","elem","shift","encodeLength","rem_len","condition","message","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","entries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","state","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","delete","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","values","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","seq","signDataLayout","Layout","transaction","signData","byteArray","accountCount","i","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","count","lookup","resolveAddressTableLookups","addressLookupTableAccounts","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","reduce","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","prefix","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","ed25519","sha512Sync","m","sha512","concatBytes","randomPrivateKey","sync","getPublicKey","verify","TransactionStatus","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","hasOwnProperty","call","blockhash","nonceInstruction","signers","add","items","compileMessage","JSON","stringify","console","warn","accountMetas","includes","uniqueMetas","pubkeyString","uniqueIndex","x","sort","y","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","valid","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","detached","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","options","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","status","confirmTransaction","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","src","toBigIntLE","toBufferLE","u64","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","base","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","UpgradeNonceAccount","createAccount","params","transfer","BigInt","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","Math","ceil","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","error","owner","dataLayout","array","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","DESTROY_TIMEOUT_MS","AgentManager","_newAgent","useHttps","keepAlive","maxSockets","https","Agent","http","_agent","_activeRequests","_destroyTimeout","_useHttps","requestStart","clearTimeout","requestEnd","destroy","MINIMUM_SLOT_PER_EPOCH","trailingZeros","n","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","floor","getFirstSlotInEpoch","pow","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","code","customMessage","name","input","init","processedInput","nodeFetch","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","rest","protocol","startsWith","startPort","parseInt","websocketPort","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","test","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","result","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","create","jsonRpcResultAndContext","context","number","notificationResultAndContext","versionedMessageFromResponse","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","createRpcClient","url","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","fetch","fetchImpl","agentManager","fetchWithMiddleware","info","modifiedFetchArgs","reject","modifiedInfo","modifiedInit","clientBrowser","RpcClient","request","callback","agent","method","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","res","waitTime","log","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","source","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","process","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","wsEndpoint","confirmTransactionInitialTimeout","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","_buildArgs","unsafeRes","getBalance","then","catch","e","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleAccountsInfoAndContext","publicKeys","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","encoding","configWithoutEncoding","getParsedProgramAccounts","strategy","rawSignature","decodedSignature","subscriptionCommitment","timeoutId","subscriptionId","done","confirmationPromise","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","TIMED_OUT","checkBlockHeight","getBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","race","removeSignatureListener","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSlotLeaders","startSlot","limit","getSignatureStatus","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","rawConfig","_buildArgsAtLeastConfirmed","getBlockProduction","extra","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","transactionDetails","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonceAndContext","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","join","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","generate","skipValidation","encoder","TextEncoder","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","Number","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","units","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","u16","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","privateKey","secp256k1","hmacSha256Sync","msgs","h","hmac","msg","update","digest","ecdsaSign","msgHash","privKey","signSync","der","recovered","isValidPrivateKey","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","keccak_256","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","delegate","authorize","authorizeWithSeed","splitInstruction","split","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","parse","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","buf","idx","isEmpty","devnet","testnet","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA,CAAC,SAAS,IAAI,EAAE;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,IAAI,EAAE,GAAG,SAAS,IAAI,EAAE;GACtB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;GAChC,IAAI,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;GAC3D,OAAO,CAAC,CAAC;AACX,EAAC,CAAC;AACF;AACA;AACA,CAAA,IAAI,WAAW,GAAG,qBAAqB,EAAE,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;AACvE;AACA,CAAA,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;AAC5B,CAAA,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACvC;CACA,IAAI,GAAG,GAAG,EAAE,EAAE;AACd,KAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KACb,OAAO,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC7B,KAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC5I,KAAI,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC7I,KAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC5I,KAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC5I,KAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AAC7I;CACA,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;GACxB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC;AAC5B,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC;AAC5B,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;GAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AACpB,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC;AAC7B,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC;AAC7B,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC;GAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;EACnB;AACD;CACA,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;AAC7B,GAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;GACZ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/C,GAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;EAClC;AACD;CACA,SAAS,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;AACxC,GAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB;AACD;CACA,SAAS,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;AACxC,GAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB;AACD;CACA,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAClC,GAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CA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3B;GACE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;GACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;GACE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;GAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;EAC3B;AACD;CACA,SAAS,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAChC,GAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,OAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;AACvF;AACA,GAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,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AM,CAAC;AACpF,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAC;AACpF,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAC;AACpF,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAC;AACpF,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC;AACpF,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,wBAAwB,MAAM,CAAC;AACpF,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAC;AACpF,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,wBAAwB,MAAM,CAAC;AAC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E,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,GAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,GAAE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AE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB;AACA;GACE,CAAC,GAAG,CAAC,CAAC;AACR,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,GAAE,CAA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AE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;AACtD,CAAC,CAAC;AACF;AACA,IAAI,EAAE,GAAG;AACT,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACtD,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;AACtD,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"}